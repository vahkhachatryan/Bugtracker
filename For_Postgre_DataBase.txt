-- Create the 'Bugtracker' database
CREATE DATABASE Bugtracker;

-- Connect to the 'Bugtracker' database
\c Bugtracker;

-- Create the 'users' table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,                          -- Unique user ID (auto-increment)
    username VARCHAR(50) NOT NULL UNIQUE,           -- Username (must be unique)
    password VARCHAR(255) NOT NULL,                 -- Encrypted password
    role VARCHAR(20) CHECK (role IN ('manager',     -- Role (manager, team lead, developer, test engineer)
                                    'team lead', 
                                    'developer', 
                                    'test engineer'))
);

-- Create the 'tasks' table
CREATE TABLE tasks (
    id SERIAL PRIMARY KEY,                          -- Unique task ID (auto-increment)
    type VARCHAR(10) CHECK (type IN ('bug', 'task')),  -- Task type (either bug or task)
    priority VARCHAR(10) CHECK (priority IN ('critical', -- Task priority (critical, high, medium, low)
                                            'high', 
                                            'medium', 
                                            'low')),
    status VARCHAR(20),                             -- Current task status
    title VARCHAR(255) NOT NULL,                    -- Task title
    description TEXT,                               -- Task description
    creator_id INT REFERENCES users(id),            -- Task creator (references users table)
    assignee_id INT REFERENCES users(id),           -- Task assignee (references users table)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp when the task was created
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp when the task was last updated
    blocked_tasks INT[]                             -- Array of IDs for blocked tasks (if any)
);



